---
title: Using Network Profiles (NSX-T Only)
owner: PKS
---

<strong><%= modified_date %></strong>

This topic describes how to create and use network profiles for Kubernetes clusters
provisioned with Pivotal Container Service (PKS) on vSphere with NSX-T integration.

## <a id='about'></a> About Network Profiles

Network profiles enable you to specify NSX-T configuration parameters at the time of cluster creation.
See the following table for supported use cases:

Profile Type 			| Description
------------------------|----------------------------
Load balancer sizing	| Customize the size of the load balancer deployed with your Kubernetes cluster. For more information, see [Load Balancer Sizing](#lb-sizing).
Custom Pods IP Block	| Assign custom IP addresses, from a dedicated IP block, to pods in your Kubernetes cluster. For more information, see [Custom IP Addresses for Pods](#custom-pods).
Routable Pods IP Block	| Assign routable IP addresses, from a dedicated IP block, to pods in your Kubernetes cluster. For more information, see [Routable IP Addresses for Pods](#routable-pods).
Pods Subnet Prefix 		| Specify the size of the Pod subnet. For more information, see [Pods Subnet Prefix](#subnet-prefix).

### <a id='lb-sizing'></a> Load Balancer Sizing

Using a network profile, you can customize the size of the load balancer that is deployed when a Kubernetes cluster is created using PKS.
See [Load Balancers in PKS Deployments on vSphere with NSXâ€‘T](about-lb.html#with-nsx-t) for more information.

### <a name='custom-pods'></a> Custom Pods IP Blocks

When you configure your NSX-T infrastructure for PKS, you must create a **Pods IP Block**.
For more information, see [Plan IP Blocks](nsxt-prepare-env.html#plan-ip-blocks) in _Preparing NSX-T Before Deploying PKS_.
By default, this subnet is non-routable.

When a Kubernetes cluster is deployed, each pod receives an IP address from the **Pods IP Block** you created.
Because the pod IP addresses are non-routable, NSX-T creates a SNAT rule on the T0 router to allow network egress from the pods.
This configuration is shown in the diagram below.

  <img src="images/nsxt/non-routable-pods.png" alt="Non-routable pod network with SNAT">

### <a name='routable'></a> Routable Pods IP Block

With network profiles, you can override the default behavior described in [Non-Routable IP Blocks](#non-routable) by using routable pods.
To use routable pods, do the following after you deploy PKS:

1. Define a routable /24 IP block in NSX-T. For information about creating IP blocks,
see [Create NSX-T Objects](nsxt-prepare-env.html#create-objects-network-objects) in _Preparing NSX-T Before Deploying PKS_.
2. Define a network profile that references the routable IP block.
For information about defining a network profile,
see [Define a Network Profile](#define-profile).

When you deploy a Kubernetes cluster using that network profile, each pod receives a routable IP address.
This configuration is shown in the diagram below.

  <img src="images/nsxt/routable-pods.png" alt="Routable pod network using network profiles">

If you use routable pods, the SNAT rule is not created.

### <a id='subnet-prefix'></a> Pods Subnet Prefix

Each time a Kubernetes namespace is created, a subnet from the Pods IP Block is allocated. The size of the subnet carved from this block for such purposes is /24. See [Pods IP Block](nsxt-prepare-env.html#pods-ip-block) for more information.

You can define a Network Profile using the `pod_subnet_prefix` parameter to cusomtize the size of the pod subnet reserved for namespaces. See the example below.

### <a id='permissions'></a> Required Permissions

Only PKS administrators can create and delete network profiles. For more information, see:

* [Define a Network Profile](#define-profile)
* [Create a Network Profile](#create-profile)
* [Delete a Network Profile](#delete-profile)

Kubernetes managers can list existing network profiles, assign them to clusters, and view cluster details.
For more information, see:

* [List Network Profiles](#list-profiles)
* [Create a Cluster With a Network Profile](#create-cluster)
* [View Cluster Details](#view-details)

## <a id="define-profile"></a> Define a Network Profile

Before you can create a network profile, you must define your network profile configuration in a JSON file as described below.
For information about creating network profiles, see [Create a Network Profile](#create-profile).

Parameter 			| Description
--------------------|----------------------------
`name`	  			| User-defined name for the network profile.
`description`   	| User-defined description for the network profile.
`parameters`    	| One or more name-value pairs.
`lb_size`	  		| Size of the load balancer deployed with the Kubernetes cluster:<br> `small`, `medium`, or `large`.
`pod_routable`  	| Either `true` or `false`. Set to `true` to enable routable pods<br> or to `false` to use a non-routable IP block that overrides<br> the default.
`pod_ip_block_ids`	| UUID of the IP block from NSX Manager, comma-separated.
`pod_subnet_prefix` | CIDR block range for the Pods IP Block subnet.

The following network profile, `np-lb-med.json`, defines a medium load balancer:

```
{
 "name": "lb-profile-medium",
 "description": "Network profile for medium size NSX-T load balancer",
 "parameters": { 
 	"lb_size": "medium" 
 	}
}
```

The following network profile, `np-routable-pods.json`, defines routable pod addresses from two /24 IP blocks:

```
{
  "description": "Network profile with small load balancer and two routable pod networks",
  "name": "small-routable-pod",
  "parameters": {
    "lb_size": "small",
    "pod_routable": true,
    "pod_ip_block_ids": [
      "ebe78a74-a5d5-4dde-ba76-9cf4067eee55",
      "ebe78a74-a5d5-4dde-ba76-9cf4067eee56"
    ]
  }
}
```

In addition, you can use a network profile to override the global
non-routable **Pods IP Block** that you configured in preparation
for deploying PKS with NSX-T with a new non-routable IP block.
For information about preparing your NSX-T environment
for installing PKS,
see [Preparing NSX-T Before Deploying PKS](nsxt-prepare-env.html).

To do this, specify the new non-routable IP block in the network profile
and set the `pod_routable` parameter to `false`.

For example, the following network profile, `np-non-routable-pods.json`, defines a non-routable /24 IP block for pods.
With this approach, the non-routable IP block specified in the profile definition
overrides the default non-routable **Pods IP Block**.

```
{
  "description": "Network profile with small load balancer and non-routable pod network",
  "name": "small-routable-pod",
  "parameters": {
    "lb_size": "small",
    "pod_routable": false,
    "pod_ip_block_ids": [
      "ebe78a74-a5d5-4dde-ba76-9cf4067eee57"
    ]
  }
}
```

The following network profile specifies /27 for the size of the Pods IP Block subnet:

```
{
    "name": "np-pod-prefix",
    "description": "Network Profile for Customizing Pod Subnet Size",
    "parameters": {
        "pod_subnet_prefix" : 27
    }
}
``` 

## <a id="cli-commands"></a> Create and Use Network Profiles

You can create and use network profiles through the PKS CLI.
The PKS CLI supports the following operations for network profiles:

* [Create a Network Profile](#create-profile)
* [Delete a Network Profile](#delete-profile)
* [List Network Profiles](#list-profiles)
* [Create a Cluster with a Network Profile](#create-cluster)
* [View Cluster Details](#view-details)

### <a id="create-profile"></a> Create a Network Profile

After you define your network profile as described in [Define a Network Profile](#define-profile),
run the following command:

```
pks create-network-profile PATH-TO-YOUR-NETWORK-PROFILE-CONFIGURATION
``` 
Where `PATH-TO-YOUR-NETWORK-PROFILE-CONFIGURATION` is the path to the JSON file
you created in [Define a Network Profile](#define-profile).

For example:

<pre class="terminal">
$ pks create-network-profile np-routable-pods.json

Network profile small-routable-pod successfully created
</pre>

Only cluster administrators, `pks.clusters.admin`, can create network profiles.
If a cluster manager, `pks.clusters.manage`, is attempting to create a network profile,
the following error occurs:

```
You do not have enough privileges to perform this action. Please contact the PKS administrator.
```

### <a id="delete-profile"></a> Delete a Network Profile

To delete a network profile, run the following command:

```
pks delete-network-profile NETWORK-PROFILE-NAME
```

Where `NETWORK-PROFILE-NAME` is the name of the network profile you want to delete.

<p class="note"><strong>Note</strong>: You cannot delete a network profile that is in use.</p>

Only cluster administrators, `pks.clusters.admin`, can delete network profiles.
If a cluster manager, `pks.clusters.manage`, is attempting to delete a network profile,
the following error occurs:

```
You do not have enough privileges to perform this action. Please contact the PKS administrator.
```

### <a id="list-profiles"></a> List Network Profiles

To list your network profiles, run the following command:

```
pks network-profiles
```

For example:

<pre class="terminal">
$ pks network-profiles

	Name				Description 
	lb-profile-medium	Network profile for medium size NSX-T load balancer
	small-routable-pod 	Network profile with small load balancer and two routable pod networks
</pre>

### <a id="create-cluster"></a> Create a Cluster with a Network Profile

To create a PKS-provisioned Kubernetes cluster with a network profile, run the following command:

```
pks create-cluster CLUSTER-NAME --external-hostname HOSTNAME --plan PLAN-NAME --network-profile NETWORK-PROFILE-NAME
```

Where:

* `CLUSTER-NAME` is a unique name for your cluster.
* `HOSTNAME` is your external hostname used for accessing the Kubernetes API.
* `PLAN-NAME` is the name of the PKS plan you want to use for your cluster.
* `NETWORK-PROFILE-NAME` is the name of the network profile you want to use for your cluster.

<p class="note"><strong>Note</strong>: You must create the network profile before you create the cluster.</p>

### <a id="view-details"></a> View Cluster Details

To view detailed information about your cluster, run the following command:

```
pks cluster CLUSTER-NAME
```

Where `CLUSTER-NAME` is the name of your cluster. See the example output of this command below:

```
Name:						k8s1
Plan Name:					Plan 1
UUID:						6125f251-1a2e-4903-9192-efc21b27ec20
Last Action:				CREATE
Last Action State:			succeeded
Last Action Description:	Instance provisioning completed
Kubernetes Master Host:		k8s1
Kubernetes Master Port:		8443
Worker Nodes: 				1
Kubernetes Master IP(s):	192.168.150.104
Network Profile Name:		lb-profile-medium
```
