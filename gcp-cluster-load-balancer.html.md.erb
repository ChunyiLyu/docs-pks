---
title: Configuring a GCP Load Balancer for PKS Clusters
owner: PKSA
---

A load balancer is a third party device that distributes network and application traffic across resources. You can use a load balancer to secure and facilitate access to a PKS cluster from outside the network. Using a load balancer can also prevent individual network components from being overloaded by high traffic.

The procedure below explains how to create a Google Cloud Platform (GCP) load balancer for your PKS cluster. Using a GCP load balancer is optional, but adding one to your Kubernetes cluster can make it easier to manage the cluster via the PKS API and `kubectl`. 

##<a id="overview"></a> Overview

To configure a GCP load balancer with a PKS cluster, you must connect a load balancer to the cluster, funnel inbound traffic to the load balancer, and set a firewall rule to allow traffic into the cluster itself. 

The steps of this procedure are summarized below:

First, use the GCP Console to [create a load balancer](#create) for the a new cluster. Configure the frontend and backend of the load balancer; the backend configuration connects the load balancer to the PKS cluster, and the frontend configuration tells inbound traffic how to contact the load balancer successfully.

Next, [create a network tag](#tag) for the master VMs in your PKS cluster. This lets you associate a firewall rule with the master VMs, ensuring that traffic accessing the cluster via the load balancer is subject to the firewall rule.

Finally, [configure a firewall rule](#firewall) with permission information about which types of traffic can access your cluster.

###<a id="prereqs"></a> Prerequisites

* To complete these procedures, you must have already configured a separate external load balancer to access the PKS API.
* The version of the PKS CLI you are using must match the version of the PKS tile you are installing.

<p class="note"><strong>Note</strong>: This procedure uses example commands which you should modify to represent the details of your PKS installation.</p>

##<a id="create"></a> Creating GCP Load Balancers for PKS Clusters

1. Log in to the PKS API and create a cluster. For more information, see [Create a Cluster](create-cluster.html).
2. Navigate to [Google Cloud Platform](https://console.cloud.google.com/).
3. In the sidebar menu, select **Network Services** > **Load balancing**.
4. Click **Create Load Balancer**.
5. In the **TCP Load Balancing** pane, click **Start configuration**.
6. Click **Continue**. The **New TCP load balancer** menu opens.
7. Enter a **Name** for your load balancer and click **Backend configuration**. The **Backend configuration** pane opens.
<p class="note"><strong>Note</strong>: Configure a TCP Load Balancer with a human-readable name in lower case letters, such as <code>your-pks-cluster-api</code>.</p>
8. Configure the load balancer backend.
	1. Choose the **Region** in which the cluster is deployed.
	1. Click **Select existing instances**.
	1. Select all master VMs for your cluster from the dropdown. To locate the IP addresses and VM IDs of the master VMs, see [Identify Kubernetes Cluster Master VMs](create-cluster.html#master-id).
	  <p class="note breaking"><strong>Breaking Change</strong>: If master VMs are recreated for any reason, such as a stemcell upgrade, you must reconfigure the load balancer to target the new master VMs. For more information, see the <a href="#reconfigure">Reconfiguring a GCP Load Balancer</a> section below.</p>
	1. Specify any other configuration options you require and click **Done** to complete backend configuration.
	<p class="note"><strong>Note</strong>: For clusters with multiple master node VMs, health checks on port 8443 are recommended.</p>
9. Click **Frontend configuration**. The **Frontend Configuration** pane opens.
10. Configure the load balancer frontend.
	1. Optional: Enter a human-readable name in lower case letters, such as `pks-cluster-api`. 
	1. Click **IP**. 
	1. Select **Create IP address**. 
	1. Give the IP address a human-readable name and click **Reserve**. 
	1. In the **Port** field, enter `8443`.
	1. Click **Done** to complete frontend configuration. 
11. Review your load balancer configuration and click **Create**.

##<a id="tag"></a> Creating a Network Tag 

1. In the Google Cloud Platform sidebar menu, select **Compute Engine** > **VM instances**.
1. Filter to find the master instances of your cluster. Type `master` in the **Filter VM Instances** search box and press **Enter**.
1. Click the name of the master instances. The **VM instance details** menu opens.
1. Click **Edit**. 
1. Click in the **Network tags** field and type a human-readable name in lower case letters. Press **Enter** to create the network tag.
1. Scroll to the bottom of the screen and click **Save**.

##<a id="firewall"></a> Creating Firewall Rules for Load Balancers

1. In the Google Cloud Platform sidebar menu, select **VPC Network** > **Firewall Rules**.
1. Click **Create Firewall Rule**. The **Create a firewall rule** menu opens.
1. Give your firewall rule a human-readable name in lower case letters. For ease of use, you may want to align this name with the name of the load balancer you created in [Creating Load Balancers for PKS Clusters](#create).
1. In the **Network** menu, select the VPC network on which you have deployed the PKS tile.
1. In the **Direction of traffic** field, select **Ingress**.
1. In the **Action on match** field, select **Allow**.
1. Confirm that the **Targets** menu is set to `Specified target tags` and enter the tag you made in [Creating a Network Tag](#tag) in the **Target tags** field.
1. In the **Source filter** field, choose an option to filter source traffic. 
1. Based on your choice in the **Source filter** field, specify IP addresses, Subnets, or Source tags to allow access to your cluster.
1. In the **Protocols and ports** field, choose **Specified protocols and ports** and enter the port number you specified in [Creating Load Balancers for PKS Clusters](#create), prepended by `tcp:`. For example: `tcp:8443`.
1. Specify any other configuration options you require and click **Done** to complete frontend configuration.
1. Click **Create**.

## <a id="reconfigure"></a>Reconfiguring a GCP Load Balancer

If Kubernetes master node VMs are recreated for any reason, you must reconfigure your cluster load balancers to point to the new master VMs.
For example, after a stemcell upgrade, BOSH recreates the VMs in your deployment.

To reconfigure your GCP cluster load balancer to use the new master VMs, do the following:

1. Locate the VM IDs of the new master node VMs for the cluster. For information about locating the VM IDs, see [Identify Kubernetes Cluster Master VMs](create-cluster.html#master-id).
1. Navigate to the [GCP console](https://console.cloud.google.com/).
1. In the sidebar menu, select **Network Services > Load balancing**.
1. Select your cluster load balancer and click **Edit**.
1. Click **Backend configuration**.
1. Click **Select existing instances**.
1. Select the new master VM IDs from the dropdown. Use the VM IDs you located in the first step of this procedure.
1. Click **Update**.
1. In the sidebar menu, select **Cloud DNS**.
1. Select the zone where your load balancer is deployed.
1. Click **Add record set**.
1. Under **DNS Name**, enter a subdomain for the load balancer. For example, to use `my-cluster.example.com` as your cluster hostname, enter `my-cluster` in this field.
1. Select a **Resource Record Type**, **TTL**, and **TTL Unit**.
1. Enter the IP address for the master node of the cluster. You located this IP address in the `pks cluster` output earlier in this procedure.
1. Click **Create**.
