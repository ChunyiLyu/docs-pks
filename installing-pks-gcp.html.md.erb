---
title: Installing PKS on GCP
owner: PKS
iaas: GCP
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure Pivotal Container Service (PKS) on Google Cloud Platform (GCP).

##<a id='prerequisites'></a>Prerequisites

Before performing the procedures in this topic, you must have deployed and configured Ops Manager.
For more information, see [GCP Prerequisites and Resource Requirements](gcp-requirements.html).

<%= partial 'prerequisites' %>

##<a id='install'></a> Step 1: Install PKS

<%= partial 'install-pks' %>

##<a id='configure'></a> Step 2: Configure PKS

Click the orange **Pivotal Container Service** tile to start the configuration process.

![Pivotal Container Service tile on the Ops Manager installation dashboard](images/pks-tile-orange.png)

###<a id='azs-networks'></a> Assign AZs and Networks

<%= partial 'azs-networks' %>

###<a id='pks-api'></a> PKS API

<%= partial 'pks-api' %>

###<a id='plans'></a> Plans

<%= partial 'plans' %>

###<a id='cloud-provider'></a> Kubernetes Cloud Provider

To configure your Kubernetes cloud provider settings, follow the procedures below:

1. Click **Kubernetes Cloud Provider**.

1. Under **Choose your IaaS**, select **GCP**.

1. Ensure the values in the following procedure match those in the **Google Config** section of the **Ops Manager** tile as follows:

    <img src="images/cloud-gcp.png" alt="GCP pane configuration" width="325">

    1. Enter your **GCP Project Id**, which is the name of the deployment in your Ops Manager environment.

    1. Enter your **VPC Network**, which is the VPC network name for your Ops Manager environment.

    1. Enter your **GCP Master Service Account ID**. This is the email address associated with the master node service account. For information about configuring this account, see [Create the Master Node Service Account](gcp-prepare-env.html#create-master).

    1. Enter your **GCP Worker Service Account ID**. This is the email address associated with the worker node service account. For information about configuring this account, see [Create the Worker Node Service Account](gcp-prepare-env.html#create-worker).

1. Click **Save**.

###<a id='syslog'></a> (Optional) Logging

<%= partial 'logging' %>

###<a id='networking'></a> Networking

To configure networking, do the following:

1. Click **Networking**.
1. Under **Container Networking Interface**, select **Flannel**.
  <img src="images/networking-flannel.png" alt="Networking pane configuration" width="425">

1. (Optional) If you do not use a NAT instance, select **Allow outbound internet access from Kubernetes cluster vms (IaaS-dependent)**. Enabling this functionality assigns external IP addresses to VMs in clusters.

1. Click **Save**.

###<a id='uaa'></a> UAA

<%= partial 'uaa' %>

###<a id='monitoring'></a> (Optional) Monitoring

<%= partial 'monitoring' %>

###<a id='usage'></a> Usage Data

<%= partial 'usage-data' %>

###<a id='errands'></a> Errands

Errands are scripts that run at designated points during an installation.

To configure when post-deploy and pre-delete errands for PKS are run, make a selection in the dropdown next to the errand. For a typical PKS deployment, we recommend that you leave the default settings.

  ![Errand configuration pane](images/errands.png)

For more information about errands and their configuration state, see [Managing Errands in Ops Manager](https://docs.pivotal.io/pivotalcf/customizing/managing_errands.html).

<p class="note warning"><strong>WARNING</strong>: Because PKS uses floating stemcells, updating the PKS tile with a new stemcell triggers the rolling of every VM in each cluster. Also, updating other product tiles in your deployment with a new stemcell causes the PKS tile to roll VMs. This rolling is enabled by the <strong>Upgrade all clusters errand</strong>. We recommend that you keep this errand turned on because automatic rolling of VMs ensures that all deployed cluster VMs are patched. However, automatic rolling can cause downtime in your deployment.
<br><br>
If you upgrade PKS from 1.0.x to 1.1, you must enable the <strong>Upgrade All Cluster</strong> errand. This ensures existing clusters can perform resize or delete actions after the upgrade.</p>

###<a id='resource-config'></a> Resource Config

To modify the resource usage of PKS and specify your PKS API load balancer, follow the steps below:

1. Select **Resource Config**.

1. (Optional) Edit resources used by the **Pivotal Container Service** job.

    ![Resource pane configuration](images/resources.png)

1. In the **Load Balancers** column, enter a name for your PKS API load balancer that begins with `tcp:`.
For example, `tcp:pks-api`, where `pks-api` is the name that you configured in the [Create a Load Balancer](gcp-api-load-balancer.html#create-lb) step _Configuring a GCP Load Balancer for the PKS API_.

<p class="note"><strong>Note</strong>: If you experience timeouts or slowness when interacting with the PKS API, select a <strong>VM Type</strong> with greater CPU and memory resources for the <strong>Pivotal Container Service</strong> job.</p>

## <a id='apply-changes'></a> Step 3: Apply Changes

After configuring the tile, return to the Ops Manager Installation Dashboard and click **Apply Changes** to deploy the tile.

##<a id='next-steps'></a> Next Steps

After installing PKS on GCP, you may want to do one or more of the following:

* [Install the PKS and Kubernetes CLIs](#clis)
* [Share PKS API Endpoint](#retrieve-pks-api)
* [Configure Authentication for PKS](#auth)

### <a name='clis'></a> Install the PKS and Kubernetes CLIs

<%= partial 'install-cli' %>

### <a name='retrieve-pks-api'></a> Share the PKS API Endpoint

<%= partial 'share-endpoint' %>

### <a name='auth'></a> Configure Authentication for PKS

<%= partial 'configure-auth' %>
