---
title: Creating Managed Identities in Azure for PKS
owner: Ops Manager
---

<strong><%= modified_date %></strong>

This topic describes how to create managed identities for Pivotal Container Service (PKS) on Azure.

In order for Kubernetes to create load balancers and attach persistent disks to pods, you must create managed identities with sufficient permissions.

You need separate managed identities for Kubernetes cluster master and worker node VMs.
<%= vars.vm_credentials %>

## <a id='create-master'></a>Create the Master Managed Identity

Perform the following steps to create the managed identity for master nodes:

1. Create a role definition using the following template, replacing `SUBSCRIPTION_ID` and`RESOURCE_GROUP` with the values of your environment. For more information about custom roles in Azure, see [Custom Roles in Azure](https://docs.microsoft.com/en-us/azure/role-based-access-control/custom-roles) in the Azure documentation.

    ```
    {
        "Name":  "PKS master",
        "IsCustom":  true,
        "Description":  "Permissions for PKS master",
        "Actions":  [
            "Microsoft.Network/*",
            "Microsoft.Compute/disks/*",
            "Microsoft.Compute/virtualMachines/write",
            "Microsoft.Compute/virtualMachines/read",
            "Microsoft.Storage/storageAccounts/*"
        ],
        "NotActions":  [

        ],
        "DataActions":  [

        ],
        "NotDataActions":  [

        ],
        "AssignableScopes":  [
          "/subscriptions/SUBSCRIPTION_ID/resourceGroups/RESOURCE_GROUP"
        ]
    }
    ```
1. Save your template as `pks_master_role.json`. 
1. To log in, run the following command with the Azure CLI:

    ```
    az login
    ```
    To authenticate, navigate to the URL in the output, enter the provided code, and click your account.
1. Create the role in Azure by running the following command from the directory with `pks_master_role.json`:

    ```
    az role definition create --role-definition pks_master_role.json
    ```
1. Create a managed identity by running the following command: 

    ```
    az identity create -g RESOURCE_GROUP -n pks-master
    ```
    Where `RESOURCE_GROUP` is the resource group where you are going to deploy PKS. 
    <br><br>
    For more information about managed identities, see [Create a user-assigned managed identity](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli#create-a-user-assigned-managed-identity) in the Azure documentation.
1. Assign managed identity access to the resource group by performing the following steps:
  1. Navigate to the Azure Portal and log in.
  1. Open the resource group where PKS is going to be deployed.
  1. Click **Access control (IAM)** on the left panel.
  1. Click **Add role assignment**.
  1. On the **Add role assignment** page, enter the following configurations:
    1. For **Role**, select **PKS master**.
    1. For **Assign access to**, select **User Assigned Managed Identity**.
    1. For **Select**, select the **pks-master** identity created above.

## <a id='create-worker'></a>Create the Worker Managed Identity

Perform the following steps to create the managed identity for worker nodes:

1. Create a role definition using the following template, replacing `SUBSCRIPTION_ID` and`RESOURCE_GROUP` with the values of your environment. 

    ```
    {
        "Name":  "PKS worker",
        "IsCustom":  true,
        "Description":  "Permissions for PKS worker",
        "Actions":  [
            "Microsoft.Storage/storageAccounts/*"
        ],
        "NotActions":  [

        ],
        "DataActions":  [

        ],
        "NotDataActions":  [

        ],
        "AssignableScopes":  [
          "/subscriptions/{SUBSCRIPTION_ID}/resourceGroups/{RESOURCE_GROUP}"
        ]
    }
    ```
1. Save your template as `pks_worker_role.json`. 
1. Create the role in Azure by running the following command from the directory with `pks_worker_role.json`:

    ```
    az role definition create --role-definition pks_worker_role.json
    ```

1. Create a managed identity by running the following command: 

    ```
    az identity create -g RESOURCE_GROUP -n pks-worker
    ```
    Where `RESOURCE_GROUP` is the resource group where you are going to deploy PKS. 
1. Assign managed identity access to the resource group by performing the following steps:
  1. Navigate to the Azure Portal and log in.
  1. Open the resource group where PKS is going to be deployed.
  1. Click **Access control (IAM)** on the left panel.
  1. Click **Add role assignment**.
  1. On the **Add role assignment** page, enter the following configurations:
    1. For **Role**, select **PKS worker**.
    1. For **Assign access to**, select **User Assigned Managed Identity**.
    1. For **Select**, select the **pks-worker** identity created above.

After you create managed identities for both the master and worker nodes, follow the procedures in
[Installing PKS on Azure](installing-pks-azure.html).
