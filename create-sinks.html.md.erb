---
title: Creating Sink Resources
owner: PKS
---

This topic describes how to create a sink resource for a Kubernetes cluster
provisioned with Pivotal Container Service (PKS) or for a namespace within a
cluster.

Sink resources enable PKS users to configure destinations for
logs transported following the Syslog Protocol defined in
[RFC 5424](https://tools.ietf.org/html/rfc5424).

## <a id='prerequisites'></a>Prerequisites

Before you can create a sink resource for a namespace within a PKS-provisioned Kubernetes cluster,
you must ensure that the **Enable Sink Resources** checkbox is selected in the PKS tile.
Selecting this checkbox enables namespaces to send logs to sinks.

For more information, see the _Logging_ section of the PKS installation topic
for your IaaS:

* [Installing PKS on vSphere](installing-pks-vsphere.html#syslog)
* [Installing PKS on vSphere with NSX-T Integration](installing-nsx-t.html#syslog)
* [Installing PKS on GCP](installing-pks-gcp.html#syslog)
* [Installing PKS on AWS](installing-pks-aws.html#syslog)
* [Installing PKS on Azure](installing-pks-azure.html#syslog)

### <a id='cli-prereqs'></a> CLI Requirements

To create and manage sink resources, you can use either the PKS CLI, <code>pks</code>,  
or the Kubernetes CLI, <code>kubectl</code>. 

If you use the PKS CLI, you must install PKS CLI v1.3 or later.

For CLI installation instructions, see <a href="installing-kubectl-cli.html">Installing the Kubernetes CLI</a> 
and <a href="installing-pks-cli.html">Installing the PKS CLI</a>.

## <a id='define-resource'></a>Define Sink Resources

You can create sinks for clusters and namespaces. 
A namespace sink filters logs by namespace within a cluster.

* If you want to create a cluster sink, see
[ClusterSink Resource](#define-cluster-sink).
* If you want to create a namespace sink, see
[Sink Resource](#define-namespace-sink).

### <a id='define-cluster-sink'></a>ClusterSink Resources

To create and manage ClusterSink resources, you can use either the PKS CLI, <code>pks</code>,  
or the Kubernetes CLI, <code>kubectl</code>. 

If you use the PKS CLI, you must use PKS CLI v1.3 or later.

#### <a id='cluster-sink-pks'></a> Create ClusterSink Resource with the PKS CLI

To create and apply a sink to a cluster, run the following command:

```
pks create-sink CLUSTER-NAME \
syslog://YOUR-LOG-DESTINATION:YOUR-LOG-DESTINATION-PORT
```
Where:

* `CLUSTER-NAME` is the name of your cluster.
* `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
* `YOUR-LOG-DESTINATION-PORT` is the port number of your log management.

For example:

<pre class="terminal">
$ pks create-sink my-cluster syslog://example.com:12345
</pre>

If you do not specify a name, the command creates 
a sink resource in the cluster that shares the same name as the cluster.

To provide a name for the sink resources in your cluster, run the following command. 

```
pks create-sink CLUSTER-NAME --name YOUR-SINK \
syslog://YOUR-LOG-DESTINATION:YOUR-LOG-DESTINATION-PORT
```
Where:

* `CLUSTER-NAME` is the name of your cluster.
* `YOUR-SINK` is the name of the sink you wish to create.
* `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
* `YOUR-LOG-DESTINATION-PORT` is the port number of your log management.

For example:
<pre class="terminal">
$ pks create-sink my-cluster --name second-sink syslog://example.org:54321
</pre>

Specifying a name is useful if you need to manage multiple sink resources in your cluster.

#### <a id='cluster-sink-kubectl'></a> Create ClusterSink with YAML and kubectl

To define a `ClusterSink` resource, create a YAML file that specifies your log
destination in the following format:

```
apiVersion: apps.pivotal.io/v1beta1
kind: ClusterSink
metadata:
  name: YOUR-SINK
spec:
  type: syslog
  host: YOUR-LOG-DESTINATION
  port: YOUR-LOG-DESTINATION-PORT
  enable_tls: true
```

Where:

* `YOUR-SINK` is a name you choose for your sink.
* `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
* `YOUR-LOG-DESTINATION-PORT` is the port number of your log management
service.

### <a id='define-namespace-sink'></a>Sink Resource

To define a `Sink` resource, create a YAML file that specifies your log
destination in the following format:

```
apiVersion: apps.pivotal.io/v1beta1
kind: Sink
metadata:
  name: YOUR-SINK
  namespace: YOUR-NAMESPACE
spec:
  type: syslog
  host: YOUR-LOG-DESTINATION
  port: YOUR-LOG-DESTINATION-PORT
  enable_tls: true
```

Where:

* `YOUR-SINK` is a name you choose for your sink.
* `YOUR-NAMESPACE` is the name of your namespace.
* `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
* `YOUR-LOG-DESTINATION-PORT` is the port number of your log management service.

## <a id='create-resource'></a>Create Sink Resources

To create the `ClusterSink` or `Sink` resource 
that you defined with YAML, run the following command: 

```
kubectl apply -f MY-SINK.yml
```

Where `MY-SINK.yml` is the name of your YAML file.

For example:

<pre class='terminal'>
$ kubectl apply -f example-sink.yml
</pre>

## <a id='manage-sinks'></a>Manage Sinks

To list and delete sinks, use the following commands:

### Cluster Sinks  

* `pks sinks CLUSTER-NAME`. List the sink resources deployed to your cluster.
* `pks delete-sink CLUSTER-NAME`. Delete a sink where CLUSTER-NAME is the name of the cluster
* `kubectl get clustersinks`. List the sink resources deployed to your cluster.  
* `kubectl delete clustersink YOUR-SINK`. Delete a sink, where `YOUR-SINK` is the name of your sink.  

### Namespace Sinks  

* `kubectl get sinks`. List the sink resources deployed to a namespace.

* `kubectl delete sink YOUR-SINK`. Delete a sink, where `YOUR-SINK` is the name of your sink.
