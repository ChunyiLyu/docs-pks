---
title: Install Concourse Using Helm
owner: PKS
---

<strong><%= modified_date %></strong>

Perform the steps in this section to install Concourse using Helm.

<p class="note"><strong>Note</strong>: Concourse requires privileged containers. You must deploy a cluster using a plan that allows privileged containers before installing the Concourse chart. For information about configuring plans, see the <a href="installing-pks.html#plans">Plans</a> section of <em>Installing and Configuring PKS</em>.</p>

1. Download the StorageClass spec for your cloud provider.
  * **GCP**: <pre class="terminal">$ wget https&#58;//raw.githubusercontent.com/cloudfoundry-incubator/kubo-ci/master/specs/storage-class-gcp.yml</pre>
  * **vSphere**: <pre class="terminal">$ wget https&#58;//raw.githubusercontent.com/cloudfoundry-incubator/kubo-ci/master/specs/storage-class-vsphere.yml</pre>

1. Apply the spec by running `kubectl create -f STORAGE-CLASS-SPEC.yml`.
Replace `STORAGE-CLASS-SPEC` with the name of the file you downloaded in the previous step.
For example:
<pre class="terminal">$ kubectl create -f storage-class-gcp.yml</pre>

1. Install the Concourse Helm chart by running `helm install stable/concourse` with the following options:
  * `--name APP-NAME`: (Optional) Replace `APP-NAME` with a name you provide for the installed chart.
  * `--set persistence.worker.storageClass=STORAGE-CLASS`: Replace `STORAGE-CLASS` with your StorageClass to apply the spec to the Concourse worker persistent volumes.
  * `--set postgresql.persistence.storageClass=STORAGE-CLASS`: Replace `STORAGE-CLASS` with your StorageClass to apply the spec to the PostgreSQL database persistent volumes.

    For example:
    <pre class="terminal">$ helm install --name my-concourse --set persistence.worker.storageClass=ci-storage,postgresql.persistence.storageClass=ci-storage stable/concourse</pre>

1. Forward the port number so that you can access Concourse from localhost.
By default, the Concourse chart does not expose services outside the cluster.
  1. Export the pod name as an environment variable. For example:
  <pre class="terminal">$ export POD_NAME=$(kubectl get pods --namespace default -l "app=concourse-web" -o jsonpath="{.items[0].metadata.name}")</pre>
  1. Forward the port number by running the following command:
  <pre class="terminal">$ kubectl port-forward --namespace default $POD_NAME 8080:8080</pre>

1. Navigate to `http://127.0.0.1:8080` in your browser to access Concourse.
Use the default credentials to log in.

1. Log in to your Concourse instance from the command line by running `fly -t MY-CONCOURSE login -c http://127.0.0.1:8080`.
For example:
  <pre class="terminal">
  $ fly -t ci-helm login -c http&#58;//127.0.0.1:8080
  </pre>

For more configuration options, see the [Concourse Helm chart](https://github.com/kubernetes/charts/tree/master/stable/concourse) documentation.