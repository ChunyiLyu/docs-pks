---
title: Preparing to Deploy PKS on Azure
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This topic describes how to prepare to deploy Pivotal Container Service (PKS) on Azure by manually
creating a service principal to access resources in your Azure subscription.
See [Deploying Ops Manager on Azure](./azure-om-deploy.html) for information about installing PKS
on Azure using Terraform templates.

After you complete this procedure, follow the instructions in
[Installing PKS on Azure](./installing-pks-azure.html).

##<a id="install"></a> Step 1: Install and Configure the Azure CLI

1. Install Azure CLI v2.0 or later by following the instructions for your operating system in
[Install the Azure CLI](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli) in the
Microsoft documentation.

1. To use the Azure CLI to set the active cloud, run the following command:

    ```
    az cloud set --name MY-CLOUD
    ```
    Replace `MY-CLOUD` with the value corresponding to the Azure environment where you install PKS:
    * **Azure**: `AzureCloud`.
    * **Azure China**: `AzureChinaCloud`. If logging in to `AzureChinaCloud` fails with a
      `CERT_UNTRUSTED` error, use `node` v4.x or later. For more information, see
      [Failed to login AzureChinaCloud](https://github.com/Azure/azure-xplat-cli/issues/2725) in
      GitHub.
    * **Azure Government Cloud**: `AzureUSGovernment`. Azure Government Cloud is only supported in
      PKS v1.10 and later.
    * **Azure Germany**: `AzureGermanCloud`.

    For example:
    <pre class="terminal">
    $ az cloud set --name AzureCloud
    </pre>

    <p class="note"><strong>Note</strong>: For more information about installing PKS in the China Region, see <a href="https://docs.pivotal.io/pivotalcf/customizing/offline_installation.html#install_china">Install in the China Region</a> in the Pivotal Documentation.</p>

1. To log in, run the following command:

    ```
    az login
    ```
    To authenticate, navigate to the URL in the output, enter the provided code, and click your
    account.

##<a id="default-subscription"></a> Step 2: Set Your Default Subscription

1. To list your Azure subscriptions, run `az account list`.

    For example:
    <pre class="terminal">
    $ az account list
    [
      {
        "id": "12345678-1234-5678-1234-567891234567",
        "name": "Sample Subscription",
        "user": {
          "name": "Sample Account",
          "type": "user"
      },
        "tenantId": "11111111-1234-5678-1234-678912345678",
        "state": "Enabled",
        "isDefault": true,
        "registeredProviders": [],
        "environmentName": "AzureCloud"
      },
      {
        "id": "87654321-1234-5678-1234-678912345678",
        "name": "Sample Subscription1",
        "user": {
          "name": "Sample Account1",
          "type": "user"
      },
        "tenantId": "22222222-1234-5678-1234-678912345678",
        "state": "Enabled",
        "isDefault": false,
        "registeredProviders": [],
        "environmentName": "AzureCloud"
      }
    ]
    </pre>

1. PKS deploys to your default subscription. To determine your default subscription, search the
output of the `az account list` command for the subscription with `isDefault` set to `true`. To set
a different default subscription, run the following command:

    ```
    az account set --subscription SUBSCRIPTION-ID
    ```
    Where `SUBSCRIPTION-ID` is the value of the `id` field.

	 For example:
    <pre class="terminal">
    $ az account set --subscription 87654321-1234-5678-1234-567891234567
    </pre>

1. Record the value of the `id` set as the default. You use this value in future configuration
steps.

1. Record the value of `tenantID` for your default subscription. This is your `TENANT-ID` for
creating a service principal. If your `tenantID` value is not defined, you may be using a personal
account to log in to your Azure subscription.

##<a id='create-aad'></a> Step 3: Create an AAD Application

1. To create an Azure Active Directory (AAD) application, run the following command:

    ```
    az ad app create --display-name "Service Principal for BOSH" \
    --password "PASSWORD" --homepage "MY-HOMEPAGE" \
    --identifier-uris "MY-IDENTIFIER"
    ```
    Where:
    * `PASSWORD` is a password of your choice. This is your `CLIENT-SECRET` for creating a
      service principal.
    * `MY-HOMEPAGE` is a string of your choice. Pivotal recommends that you use the string
      `http://BOSHAzureCPI`, as shown in the example below.
    * `MY-IDENTIFIER` is a string of your choice. This string must be unique within the
      organization associated with your Azure subscription.

    For example:
    <pre class="terminal">
    $ az ad app create --display-name "Service Principal for BOSH" \
    --password "pa55w0rd" --homepage "<span>http:</span>//BOSHAzureCPI" \
    --identifier-uris "<span>http</span>://BOSHAzureCPI"
    </pre>

1. From the output of the `az ad app create` command, record the value of `appId`. This is your
`APPLICATION-ID` for creating a service principal.

    For example:
    <pre class="terminal">
    {
      "appId": "abcdef01-ab23-45cd-ef67-8901234abcde",
      "appPermissions": null,
      "availableToOtherTenants": false,
      "displayName": "Service Principal for BOSH",
      "homepage": "http<span>://</span>BOSHAzureCPI",
      "identifierUris": [
        "http<span>://</span>BOSHAzureCPI"
      ],
      "objectId": "f3884df4-7d1d-4894-a78c-c1fe75750436",
      "objectType": "Application",
      "replyUrls": []
    }
    </pre>
    In this example, the value of `appId` is `abcdef01-ab23-45cd-ef67-8901234abcde`.

##<a id="create-configure"></a> Step 4: Create and Configure a Service Principal

1. To create a service principal, run the following command:

    ```
    az ad sp create --id YOUR-APPLICATION-ID
    ```
    Where `YOUR-APPLICATION-ID` is the `APPLICATION-ID` that you recorded in
    [Create an AAD Application](#create-aad).

    For example:
    <pre class="terminal">
    $ az ad sp create --id abcdef01-ab23-45cd-ef67-8901234abcde
    {
      "appId": "abcdef01-ab23-45cd-ef67-8901234abcde",
      "displayName": "Service Principal for BOSH",
      "objectId": "cc13c685-4c3b-461e-ae96-7a0563960b83",
      "objectType": "ServicePrincipal",
      "servicePrincipalNames": [
        "abcdef01-ab23-45cd-ef67-8901234abcde",
        "http<span>://</span>BOSHAzureCPI"
      ]
    }
    </pre>

1. To assign the Contributor role to your service principal, run the following command. The service
principal requires the Contributor role to deploy PKS.

    ```
    az role assignment create --assignee "SERVICE-PRINCIPAL-NAME" \
    --role "Contributor" --scope /subscriptions/SUBSCRIPTION-ID
    ```
    Where:
    * `SERVICE-PRINCIPAL-NAME` is the first value of `Service Principal Names` from the output above,
      which corresponds to `YOUR-APPLICATION-ID`.
    * `SUBSCRIPTION-ID` is the `id` of the default subscription that you recorded in
      [Set Your Default Subscription](#default-subscription).

    <p class="note"><strong>Note</strong>: If you need to use multiple resource groups for your PKS deployment on Azure, you can define custom roles for your Service Principal. These roles allow BOSH to deploy PKS to pre-existing network resources outside of the PKS resource group. For more information, see <a href="https://docs.pivotal.io/pivotalcf/refarch/azure/azure_ref_arch.html#multiple_resource_groups">Multiple Resource Group Deployment</a> in <em>Reference Architecture for Pivotal Cloud Foundry on Azure</em> in the Pivotal Documentation.</p>

    For more information about Azure Role-Based Access Control, refer to <a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles">Built-in roles for Azure resources</a> in the Azure documentation.

1. To verify the role assignment, run the following command:

    ```
    az role assignment list --assignee "SERVICE-PRINCIPAL-NAME"
    ```
    Where `SERVICE-PRINCIPAL-NAME` is the value of `Service Principal Names` that you used when you
    assigned the role.

    For example:
    <pre class="terminal">
    $ az role assignment list --assignee "abcdef01-ab23-45cd-ef67-8901234abcde"
    [
      {
       "canDelegate": null,
       "id": "/subscriptions/995b7eed-77ef-45ff-a5c9-1a405ffb8243/providers/Microsoft.Authorization/roleAssignments/0bd4fa5a-45ed-44ec-acb3-b6bb3538a78d",
       "name": "32e644cf-ba1a-4f43-bf7c-68bf4583e463",
       "principalId": "cc13c685-4c3b-461e-ae96-7a0563960b83",
       "principalName": "http<span>://</span>BOSHAzureCPI",
       "roleDefinitionId": "/subscriptions/995b7eed-77ef-45ff-a5c9-1a405ffb8243/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
       "roleDefinitionName": "Contributor",
       "scope": "/subscriptions/995b7eed-77ef-45ff-a5c9-1a405ffb8243",
       "type": "Microsoft.Authorization/roleAssignments"
      }
    ]
    </pre>

##<a id="verify-your-service-principal"></a> Step 5: Verify Your Service Principal

To verify your service principal, run the following command:

```
az login --username YOUR-APPLICATION-ID --password CLIENT-SECRET \
--service-principal --tenant TENANT-ID
```
Where:

* `YOUR-APPLICATION-ID` is the `APPLICATION-ID` that you recorded in
  [Create an AAD Application](#create-aad).
* `CLIENT-SECRET` is the password that you set in [Create an AAD Application](#create-aad).
* `TENANT-ID` is the `tenantID` that you recorded in
  [Set Your Default Subscription](#default-subscription).

For example:
<pre class="terminal">
$ az login --username abcdef01-ab23-45cd-ef67-8901234abcde --password pa55w0rd \
--service-principal --tenant 22222222-1234-5678-1234-678912345678
[
  {
    "cloudName": "AzureCloud",
    "id": "995b7eed-77ef-45ff-a5c9-1a405ffb8243",
    "isDefault": true,
    "name": "CF-Docs",
    "state": "Enabled",
    "tenantId": "22222222-1234-5678-1234-678912345678",
    "user": {
      "name": "abcdef01-ab23-45cd-ef67-8901234abcde",
      "type": "servicePrincipal"
    }
  }
]
</pre>

If you cannot log in, your service principal is invalid. Create a new service principal to try
again.

##<a id='register'></a> Step 6: Register Your Subscriptions

1. To register your subscription with Microsoft.Storage, run the following command:

    ```
    az provider register --namespace Microsoft.Storage
    ```

1. To register your subscription with Microsoft.Network, run the following command:

    ```
    az provider register --namespace Microsoft.Network
    ```

1. To register your subscription with Microsoft.Compute, run the following command:

    ```
    az provider register --namespace Microsoft.Compute
    ```

##<a id='create-availability-set'></a> Step 7: Create Availability Set

1. In the Azure console, click **All services**, and locate the **Availability sets** service.

1. Click **Add**.

1. On the **Create availability set** page, complete the configuration with the following values:
  * **Name**: Name of the availability set.
  * **Subscription**: Select the subscription where you will deploy PKS.
  * **Resource group**: Select the resource group where you will deploy PKS.
  * **Location**: Select the location group where you will deploy PKS.

1. Click **Create**.

##<a id='next-steps'></a> Next Steps

After preparing to deploy PKS on Azure, follow the instructions in
[Deploying Ops Manager on Azure](azure-om-deploy.html) to deploy Ops Manager using Terraform.
