---
title: Installing and Configuring PKS on AWS
owner: PKS
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure Pivotal Container Service (PKS) on Amazon Web Services (AWS).

Before performing the procedures in this topic, consult the [AWS Prerequisites and Resource Requirements](aws-requirements.html) topic.

##<a id='loadbalancer-pks-api'></a>Step 1: Configure External Load Balancer

Configure an external TCP load balancer to access the PKS API from outside the network. You can use any external TCP load balancer of your choice.

Refer to the procedures in this section to create a load balancer using AWS. If you choose to use a different load balancer, use the configuration in this section as a guide.

### <a id='create-lb'></a>Create a PKS API Load Balancer Using AWS

To create a load balancer using AWS, perform the following steps:

1. In a browser, navigate to the [AWS Console](https://console.aws.amazon.com/console/home).
1. Navigate to **EC2 > Load Balancers**.
1. Click **Create Load Balancer**.
1. Under **Network Load Balancer**, click **Create**.
1. Complete the **Basic Configuration** section as follows:
  1. Give your load balancer a name. Pivotal recommends naming your load balancer `pks-api`.
  1. Select **internet-facing**.
1. Complete the **Listeners** section as follows:
  1. Select **Add listener**.
      * Under **Load Balancer Protocol**, leave **TCP** selected.
      * Under **Load Balancer Port**, enter 8443.
  1. Select **Add listener**.
      * Under **Load Balancer Protocol**, leave **TCP** selected.
      * Under **Load Balancer Port**, enter 9021.
1. Complete the **Availablity Zones** section as follows:
  1. Select the VPC where you installed Ops Manager.
  1. Select an availability zone.
  1. Select the public subnet within the availability zone.
1. Click **Next: Configure Routing**.
1. Complete the **Target group** section as follows:
  * **Target group**: Select **New target group**.
  * **Name**: Enter `pks-api`.
  * **Protocol**: Select **TCP**.
  * **Port**: Enter `9021`.
  * **Target type**: Select **instance**.
1. Under **Health checks > Protocol**, leave **TCP** selected.
1. Click **Next: Register Targets**.
1. Under **Instances**, select the instance named `pivotal-container-service`.
  * Click **Add to registered**.
1. Click **Next: Review**.
1. Click **Create**.
1. Click the link for the load balancer.
1. Record the fully qualified domain name (FQDN) for the load balancer. When you configure the PKS tile, refer to this FQDN for the following:
  * Enter the FQDN in the **API Hostname (FQDN)** field. See the [PKS API](#pks-api) section for more information.
  * Enter the wildcard domain when you generate the PKS API certificate. Replace `pks-api` in the FQDN with `*`. See the [PKS API](#pks-api) section for more information.
1. Click **EC2 > Target Groups**.
1. Click **Create target group**.
1. Complete the target group configuration as follows:
  * **Target group name**: Enter `pks-uaa`.
  * **Protocol**: Select **TCP**.
  * **Port**: Enter `8443`.
  * **Target type**: Select **instance**.
  * **VPC**: Select the VPC where you installed Ops Manager.
1. Under **Health check settings > Protocol**, leave **TCP** selected.
1. Click **Create**.
1. Select the target group.
  * In the **Targets** tab, select **Edit**.
  * Under **Instances**, select the instance named `pivotal-container-service`.
  * Click **Add to registered**.
  * Click **Save**.
1. Click **EC2 > Load Balancers**.
   * Select the load balancer you created.
   * Under **Listeners**, select the **TCP : 8443** listener.
   * Click **Edit**.
   * Set the **Default target group** to `pks-uaa`.
   * Click **Save**.

### <a id='firewall-rule'></a> Create a Firewall Rule for the Load Balancer

1. Click **Security Groups**.
1. Select the security group that is applied to the `pivotal-container-service` instance.
1. In the **Inbound** tab, click **Edit**.
1. Click **Add Rule** and complete the following fields:
  * **Type**: Select **Custom TCP**.
  * **Port Range**: Enter `8443`.
  * **Source**: Select **Custom** and enter `0.0.0.0/0`.
  * **Description**: Enter `UAA`.
1. Click **Add Rule** and complete the following fields:
  * **Type**: Select **Custom TCP**.
  * **Port Range**: Enter `9021`.
  * **Source**: Select **Custom** and enter `0.0.0.0/0`.
  * **Description**: Enter `PKS API`.
1. Click **Save**.

##<a id='install'></a> Step 2: Install PKS

To install PKS, do the following:

1. Download the product file from [Pivotal Network](https://network.pivotal.io).
1. Navigate to `https://YOUR-OPS-MANAGER-FQDN/` in a browser to log in to the Ops Manager Installation Dashboard.
1. Click the **Ops Manager Director** tile.
1. Select the **Director Config** tab.
1. Configure the following settings:
  * Select **Enable Post Deploy Scripts**.
  * Clear the **Disable BOSH DNS server for troubleshooting purposes** checkbox.
1. Click **Apply Changes**.
1. Click **Import a Product** to upload the product file.
1. Under **Pivotal Container Service** in the left column, click the plus sign to add this product to your staging area.

##<a id='configure'></a> Step 3: Configure PKS

Click the orange **Pivotal Container Service** tile to start the configuration process.

![Pivotal Container Service tile on the Ops Manager installation dashboard](images/pks-tile-orange.png)

###<a id='azs-networks'></a> Assign AZs and Networks

Perform the following steps:

1. Click **Assign AZs and Networks**.

1. Select the availability zone (AZ) where you want to deploy the PKS API VM as a singleton job.
  <p class="note"><strong>Note</strong>: You must select an additional AZ for balancing other jobs before clicking <strong>Save</strong>, but this selection has no effect in the current version of PKS.</p>

    ![Assign AZs and Networks pane in Ops Manager](images/azs-networks.png)

1. Under **Network**, select the infrastructure subnet you created for the PKS API VM.
1. Under **Service Network**, select the services subnet you created for Kubernetes cluster VMs.
1. Click **Save**.

###<a id='pks-api'></a> PKS API

Perform the following steps:

1. Click **PKS API**.
1. Under **Certificate to secure the PKS API**, provide your own wildcard certificate and private key pair.
The certificate you enter here should cover the domain that routes to the PKS broker VM with TLS termination on the ingress.<br><br>
    (Optional) If you do not have a certificate and private key pair, you can have Ops Manager generate one for you. Perform the following steps:
  1. Select the **Generate RSA Certificate** link.
  1. Enter the wildcard domain for your API hostname.
    For example, if your PKS API domain is `api.pks.example.com`, then enter `*.pks.example.com`.
  1. Click **Generate**.
1. Under **API Hostname (FQDN)**, enter a fully qualified domain name (FQDN) to access the PKS API.
For example, `api.pks.example.com`.
1. Click **Save**.

###<a id='plans'></a> Plans

To activate a plan, do the following:

1. Click the **Plan 1**, **Plan 2**, or **Plan 3** tab.
  <p class="note"><strong>Note</strong>: A plan defines a set of resource types used for deploying clusters. You can configure up to three plans. Configuring **Plan 1** is required.
  </p>
1. Select **Active** to activate the plan and make it available to developers deploying clusters.
1. Under **Name**, provide a unique name for the plan.
1. Under **Description**, edit the description as needed.
The plan description appears in the Services Marketplace, which developers can access by using PKS CLI.
1. Under **AZ Placement**, select one or more AZs for the Kubernetes clusters deployed by PKS. If you select more than one AZ, PKS deploys the master VM in the first AZ and the worker VMs across the remaining AZs.
1. Under **Default Cluster Authorization Mode**, select an authentication mode for the Kubernetes clusters. Pivotal recommends selecting **RBAC**. For more information, see the [RBAC Support in Kubernetes](https://kubernetes.io/blog/2017/04/rbac-support-in-kubernetes) blog post.
1. Under **Master/ETCD Node Instances**, select the default number of Kubernetes master/etcd nodes to provision for each cluster. You can select either 1 or 3. For high availability, Pivotal recommends creating clusters with 3 master/etcd nodes.
  <p class="note warning"><strong>WARNING</strong>: To change the number of master/etcd nodes, you must ensure that no existing clusters are using this plan. PKS does not support changing the number of master/etcd nodes for plans with existing clusters.</p>
1. Under **ETCD/Master VM Type**, select the type of VM to use for Kubernetes etcd and master nodes.
1. Under **Master Persistent Disk Type**, select the size of the persistent disk for the Kubernetes master VM.
1. Under **Worker VM Type**, select the type of VM to use for Kubernetes worker nodes.
1. Under **Worker Persistent Disk Type**, select the size of the persistent disk for the Kubernetes worker nodes.
1. Under **Worker Node Instances**, select the default number of Kubernetes worker nodes to provision for each cluster. For high availability, Pivotal recommends creating clusters with at least 3 worker nodes.
1. Under **Errand VM Type**, select the size of the VM where the errand will run. The smallest instance possible is sufficient, as the only errand running on this VM is the one that applies the **Default Cluster App** YAML configuration.
1. (Optional) Under **(Optional) Add-ons - Use with caution**, enter additional YAML configuration to [add custom workloads](custom-workloads.html) to each cluster in this plan. You can specify multiple files using `---` as a separator.
1. If you want users to be able to create [pods with privileged containers](https://kubernetes.io/docs/concepts/workloads/pods/pod/#privileged-mode-for-pod-containers), select the **Enable Privileged Containers - Use with caution** option.
1. Click **Save**.

To deactivate a plan, do the following:

1. Click the **Plan 1**, **Plan 2**, or **Plan 3** tab.
1. Select **Plan Inactive**.
1. Click **Save**.

###<a id='cloud-provider'></a> Kubernetes Cloud Provider

To configure your Kubernetes cloud provider settings, do the following:

1. Click **Kubernetes Cloud Provider**.
1. Under **Choose your IaaS**, select **AWS**.
1. Perform the steps specific to AWS.
  * Enter your **AWS Master Access Key ID** and **Master Secret Access Key**. See [Preparing to Deploy PKS to AWS](aws-prepare-env.html#create-master) for more information.
  * Enter your **AWS Worker Access Key ID** and **Worker Secret Access Key**. See [Preparing to Deploy PKS to AWS](aws-prepare-env.html#create-worker) for more information.
1. Click **Save**.

###<a id='networking'></a> Networking

Perform the following steps:

1. Click **Networking**.
1. Under **Container Networking Interface**, select **Flannel**.
1. (Optional) Under **HTTP/HTTPS proxy**, select **Enabled** to configure a global proxy for all outgoing HTTP/HTTPS traffic from your Kubernetes clusters.
  ![Enable HTTP/HTTPS Proxy configuration](images/https-proxy.png)
  1. Under **HTTP Proxy URL**, enter the URL of your HTTP/HTTPS proxy endpoint. For example, `http://myproxy.com:1234`.
  1. (Optional) If your proxy uses basic authentication, enter the username and password in either **HTTP Proxy Credentials** or **HTTPS Proxy Credentials**.
  1. Under **No Proxy**, enter the service network CIDR where your PKS cluster is deployed. List any additional IP addresses that should bypass the proxy.
    <p class="note"><strong>Note</strong>: By default, the <code>.internal</code>, <code>10.100.0.0/8</code>, and <code>10.200.0.0/8</code> IP ranges are not proxied. This allows internal PKS communication.</p>
1. (Optional) If you do not use a NAT instance, enable **Allow outbound internet access from Kubernetes cluster vms (IaaS-dependent)**. Enabling this functionality assigns external IP addresses to VMs in clusters.
1. Click **Save**.

###<a id='uaa'></a> UAA

Perform the following steps:

1. Click **UAA**.
1. Under **PKS CLI Access Token Lifetime**, enter a time in seconds for the PKS CLI access token lifetime.
1. Under **PKS CLI Refresh Token Lifetime**, enter a time in seconds for the PKS CLI refresh token lifetime.

###<a id='syslog'></a> (Optional) Syslog

You can designate an external syslog endpoint for PKS component and cluster log messages.

To specify the destination for PKS log messages, do the following:

1. Click **Syslog**.
1. Select **Yes** to configure syslog forwarding.
1. Enter the destination syslog endpoint.
1. Enter the destination syslog port.
1. Select a transport protocol for log forwarding.
1. (Optional) Pivotal strongly recommends that you enable TLS encryption when forwarding logs as they may contain sensitive information. For example, these logs may contain cloud provider credentials. To enable TLS, perform the following steps.
  1. Provide the accepted fingerprint (SHA1) or name of remote peer. For example, `*.YOUR-LOGGING-SYSTEM.com`.
  1. Provide a TLS certificate for the destination syslog endpoint.
  <p class="note"><strong>Note</strong>: You do not need to provide a new certificate if the TLS certificate for the destination syslog endpoint is signed by a Certificate Authority (CA) in your BOSH certificate store.</p>

###<a id='errands'></a> Errands

Errands are scripts that run at designated points during an installation. 

To configure when post-deploy and pre-delete errands for PKS are run, make a selection in the dropdown next to the errand. For a typical PKS deployment, Pivotal recommends that you leave the default settings.

For more information about errands and their configuration state, see [Managing Errands in Ops Manager](https://docs.pivotal.io/pivotalcf/customizing/managing_errands.html).

###<a id='resource-config'></a> Resource Config

1. To modify the resource usage of PKS, click **Resource Config** and edit the **Pivotal Container Service** job.
<p class="note"><strong>Note</strong>: If you experience timeouts or slowness when interacting with the PKS API, select a <strong>VM Type</strong> with greater CPU and memory resources for the <strong>Pivotal Container Service</strong> job.</p>

1. Enter a name for your PKS API load balancer that begins with `tcp:` in the **Load Balancers** column.
For example, `tcp:pks-api`.
For more information, see [Step 1: Configure External Load Balancer](#loadbalancer-pks-api).

###<a id='stemcell'></a> (Optional) Stemcell

To edit the stemcell configuration, click **Stemcell**. Click **Import Stemcell** to import a new stemcell. 

PKS uses floating stemcells. Floating stemcells allow upgrades to the minor versions of stemcells but not the major versions. 
For example, a stemcell can float from `1234.56` to `1234.99` but not from `1234.991` to `1235.0`. 
For more information on floating stemcells, see the 
[Understanding Floating Stemcells](http://docs.pivotal.io/pivotalcf/customizing/understanding-stemcells.html) topic.

<p class="note warning"><strong>WARNING</strong>: Because PKS uses floating stemcells, updating the PKS tile with a new stemcell triggers the rolling of every VM in each cluster. Also, updating other product tiles in your deployment with a new stemcell causes the PKS tile to roll VMs. This rolling is enabled by the <b>Upgrade all clusters errand</b>. Pivotal recommends that you keep this errand turned on because automatic rolling of VMs ensures that all deployed cluster VMs are patched. However, automatic rolling can cause downtime in your deployment.</p>

##<a id='apply-changes'></a> Step 4: Apply Changes

After configuring the tile, return to the Ops Manager Installation Dashboard and click **Apply Changes** to deploy the tile.

##<a id='retrieve-pks-api'></a> Step 5: Retrieve PKS API Endpoint

You must share the PKS API endpoint to allow your organization to use the API to create, update, and delete clusters.
See [Create a Cluster](create-cluster.html) for more information.

To retrieve the PKS API endpoint, do the following:

1. Navigate to the Ops Manager Installation Dashboard. 
1. Click the Pivotal Container Service tile.
1. Click the **Status** tab and locate the **Pivotal Container Service** job. The IP address of the Pivotal Container Service job is the PKS API endpoint.

##<a id='next-steps'></a> Next Steps

Configure authentication for PKS using either User Account and Authentication (UAA) or enterprise single sign-on (SSO).

To create and manage users using UAA, see [Manage Users in UAA](manage-users.html).

To set up SSO configuration with Security Assertion Markup Language (SAML), see [Configure Authentication and Enterprise SSO](configure-sso.html).

After configuring authentication, follow the procedures in [Configure PKS API Access](configure-api.html) to enable operators to create and manage clusters.
