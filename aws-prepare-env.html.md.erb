---
title: Preparing AWS Before Deploying PKS
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This guide describes the preparation steps required to install Pivotal Container Service (PKS) on Amazon Web Services (AWS).

After you follow the procedures in [Deploying Ops Manager on AWS](aws-om-deploy.html) and [Configuring Ops Manager on AWS](aws-om-config.html), you must create policies and instance profiles for the master node and worker node VMs before deploying PKS.
Follow these procedures to create policies and instance profiles in your AWS environment.

## <a id='om-user-role'></a>Modify the Ops Manager IAM User or Role

To allow Ops Manager to assign the master node and worker node instance profiles to each VM,
do one of the following:

* If you selected the **Use AWS Keys** option in the **AWS Config** pane of the BOSH Director tile,
follow the instructions in [Modify the Ops Manager IAM User](#om-user).

* If you selected the **Use AWS Instance Profile** option in the **AWS Config** pane of the BOSH Director tile,
follow the instructions in [Modify the Ops Manager IAM Role](#om-instance-profile).

For information about configuring the **AWS Config** pane of the BOSH Director tile,
see the [AWS Config Page](aws-om-config.html#aws-config) section in _Configuring Ops Manager on AWS_.

### <a id='om-user'></a>Modify the Ops Manager IAM User

To allow Ops Manager to assign the master node and worker node instance profiles to each VM,
change the inline policy of the Ops Manager IAM user:

1. Log in to the [AWS Management Console](https://aws.amazon.com/console/).
1. Select **IAM > Users**.
1. Select the Ops Manager IAM user for your environment.
1. In **Permissions**, select the Ops Manager user policy (`<prefix>_ops_manager_user`).
1. Click **Edit policy**.
1. Select **JSON**.
1. Search for the `iam:PassRole` statement and replace the field `Resource` with `*`. For example:

    ```
    {
        "Sid": "AllowToCreateInstanceWithCurrentInstanceProfile",
        "Effect": "Allow",
        "Action": [
            "iam:PassRole"
        ],
        "Resource": "*"
    }
    ```
1. Click **Review Policy**.
1. Click **Save changes**.

### <a id='om-instance-profile'></a>Modify the Ops Manager IAM Role

To allow Ops Manager to assign the master node and worker node instance profiles to each VM,
add the following inline policy to the Ops Manager IAM role:

1. Log in to the [AWS Management Console](https://aws.amazon.com/console/).
1. Select **IAM > Policies**.
1. Select the Ops Manager IAM role for your environment.
1. Click **Add inline policy**.
1. Select **JSON**.
1. Copy and paste the following into the **JSON** tab:

    ```
    {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": "iam:PassRole",
            "Resource": "*"
        }
    ]
    }
    ```
1. Click **Review Policy**.
1. Choose a name for the policy.
1. Click **Create policy**.

## <a id='instance-profiles'></a>Create IAM Instance Profiles

In order for Kubernetes to create load balancers and attach persistent disks to pods, you must create users with sufficient permissions.

To set up accounts with the correct permissions, create master node and worker node policies and associate them to instance profiles.

### <a id='master-policy'></a>Step 1: Create the Master Node Policy

1. Log in to the [AWS Management Console](https://aws.amazon.com/console/).
1. Select **IAM > Policies**.
1. Click **Create policy**.
1. Click **JSON**.
1. Copy the following policy and paste it into the policy field:

     ```
          {
       "Version": "2012-10-17",
       "Statement": [
           {
               "Effect": "Allow",
               "Action": "s3:*",
               "Resource": [
                   "arn:aws:s3:::kubernetes-*"
               ]
           },
           {
               "Effect": "Allow",
               "Action": "ec2:Describe*",
               "Resource": "*"
           },
           {
               "Effect": "Allow",
               "Action": "ec2:AttachVolume",
               "Resource": "*"
           },
           {
               "Effect": "Allow",
               "Action": "ec2:DetachVolume",
               "Resource": "*"
           },
           {
               "Effect": "Allow",
               "Action": [
                   "ec2:*"
               ],
               "Resource": [
                   "*"
               ]
           },
           {
               "Effect": "Allow",
               "Action": [
                   "elasticloadbalancing:*"
               ],
               "Resource": [
                   "*"
               ]
           }
         ]
     }
     ```
1. Click **Review policy**.
1. Give the policy a name. For example, `pks-master-policy`.
1. Click **Create policy**.

### <a id='create-master'></a>Step 2: Create the Master Node Instance Profile

1. From the AWS Management Console, select **IAM > Roles**.

1. Click **Create role**.

1. Under **Select type of trusted entity**, select **AWS service**.

1. Under **Choose the service that will use this role**, select **EC2**.

1. Click **Next: Permissions**.

1. Select the policy you created in the previous section. For example, `pks-master-policy`.

1. Click **Next: Review**.

1. Name the role. For example, `pks-master`.

1. Click **Create role**.

### <a id='worker-policy'></a>Step 3: Create the Worker Node Policy

1. From the AWS Management Console, select **IAM > Policies**.
1. Click **Create policy**.
1. Click **JSON**.
1. Copy the following policy and paste it into the policy field:

     ```
     {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Action": "ec2:Describe*",
              "Effect": "Allow",
              "Resource": "*"
          },
          {
              "Action": "ec2:AttachVolume",
              "Effect": "Allow",
              "Resource": "*"
          },
          {
              "Action": "ec2:DetachVolume",
              "Effect": "Allow",
              "Resource": "*"
          }
      ]
     }
     ```
1. Click **Review policy**.
1. Give the policy a name. For example, `pks-worker-policy`.
1. Click **Create policy**.

### <a id='create-worker'></a>Step 4: Create the Worker Node Instance Profile

1. From the AWS Management Console, select **IAM > Roles**.

1. Click **Create role**.

1. Under **Select type of trusted entity**, select **AWS service**.

1. Under **Choose the service that will use this role**, select **EC2**.

1. Click **Next: Permissions**.

1. Select the policy you created in the previous section. For example, `pks-worker-policy`.

1. Click **Next: Review**.

1. Name the role. For example, `pks-worker`.

1. Click **Create role**.

## <a id="next"></a> Next Steps

After you complete this procedure, follow the instructions in the following topics:

1. [Creating an AWS Load Balancer for the PKS API](aws-api-load-balancer.html)
1. [Installing PKS on AWS](installing-pks-aws.html)
1. [Completing AWS Load Balancer Configuration](aws-lb-config.html)
