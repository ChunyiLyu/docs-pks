---
title: Installing PKS on Azure
owner: PKS
iaas: Azure
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure Pivotal Container Service (PKS) on Azure.

##<a id='prerequisites'></a>Prerequisites

Before performing the procedures in this topic, you must have deployed and configured Ops Manager.
For more information, see [Azure Prerequisites and Resource Requirements](azure-requirements.html).

<%= partial 'prerequisites' %>

##<a id='install'></a> Step 1: Install PKS

<%= partial 'install-pks' %>

##<a id='configure'></a> Step 2: Configure PKS

Click the orange **Pivotal Container Service** tile to start the configuration process.

![Pivotal Container Service tile on the Ops Manager installation dashboard](images/pks-tile-orange.png)

  <p class="note warning"><strong>WARNING</strong>: When you configure the PKS tile,
  do not use spaces in any field entries. This includes spaces between characters as well as
  leading and trailing spaces. If you use a space in any field entry, the deployment of PKS fails.</p>

###<a id='azs-networks'></a> Assign Networks

<%= partial 'azs-networks-azure' %>

###<a id='pks-api'></a> PKS API

<%= partial 'pks-api' %>

###<a id='plans'></a> Plans

<%= partial 'plans' %>

###<a id='cloud-provider'></a> Kubernetes Cloud Provider

To configure your Kubernetes cloud provider settings, follow the procedures below:

1. Click **Kubernetes Cloud Provider**.

1. Under **Choose your IaaS**, select **Azure**.

    <img src="images/cloud-azure.png" alt="Azure pane configuration">

1. Under **Azure Cloud Name**, select the identifier of your Azure environment.

1. Enter **Subscription ID**. This is the ID of the Azure subscription that the cluster is deployed in.

1. Enter **Tenant ID**. This is the Azure Active Directory (AAD) tenant ID for the subscription that the cluster is deployed in.

1. Enter **Location**. This is the location of the resource group that the cluster is deployed in. 
<br><br>
	You set the location name in the `terraform.tfvars` file in [Deploying Ops Manager on Azure](azure-om-deploy.html). However, Terraform removes the spaces from this name and makes it lower-case. For example, if you entered `Central US` in the `terraform.tfvars` file, it becomes `centralus`. You must enter the converted form of the location name in the **Location** field, such as `centralus`.

1. Enter **Resource Group**. This is the name of the resource group that the cluster is deployed in.

1. Enter **Virtual Network**. This is the name of the virtual network that the cluster is deployed in.

1. Enter **Virtual Network Resource Group**. This is the name of the resource group that the virtual network is deployed in.

1. Enter **Default Security Group**. This is the name of the security group attached to the cluster's subnet.

1. Enter **Primary Availability Set**. This is the name of the availability set that will be used as the load balancer back end.
<br><br>
	Terraform creates this availability set and its name is `YOUR-ENVIRONMENT-NAME-pks-as`, where `YOUR-ENVIRONMENT-NAME` is the value you provided for `env_name` in the `terraform.tfvars` file. See [Step 1: Download and Edit the Terraform Variables File](azure-om-deploy.html#download) of <em>Deploying Ops Manager on Azure</em> for more information. You can also find the name of the availability set by logging in to the Azure console. 

1. For **Master Managed Identity**, enter `pks-master`. You created the managed identity for the master nodes in  
[Create the Master Nodes Managed Identity](azure-managed-identities.html#create-master) in *Creating Managed Identities in Azure for PKS*.

1. For **Worker Managed Identity**, enter `pks-worker`. You created the managed identity for the worker nodes in  
[Create the Worker Nodes Managed Identity](azure-managed-identities.html#create-worker) in *Creating Managed Identities in Azure for PKS*. 

1. Click **Save**.

###<a id='syslog'></a> (Optional) Logging

<%= partial 'logging' %>

###<a id='networking'></a> Networking

To configure networking, do the following:

1. Click **Networking**.
1. Under **Container Networking Interface**, select **Flannel**.
  <img src="images/networking-flannel.png" alt="Networking pane configuration" width="425">
1. (Optional) Enter values for **Kubernetes Pod Network CIDR Range** and **Kubernetes Service Network CIDR Range**. 
	* Ensure that the CIDR ranges do not overlap and have sufficient space for your deployed services.
	* Ensure that the CIDR range for the **Kubernetes Pod Network CIDR Range** is large enough to accommodate the expected maximum number of pods.
1. (Optional) If you do not use a NAT instance, select **Allow outbound internet access from Kubernetes cluster vms (IaaS-dependent)**.
Enabling this functionality assigns external IP addresses to VMs in clusters.

1. Click **Save**.

###<a id='uaa'></a> UAA

<%= partial 'uaa' %>

###<a id='monitoring'></a> (Optional) Monitoring

<%= partial 'monitoring' %>

###<a id='usage'></a> Usage Data

<%= partial 'usage-data' %>

###<a id='errands'></a> Errands

<%= partial 'errands' %>

###<a id='resource-config'></a> Resource Config

To modify the resource usage of PKS and specify your PKS API load balancer, follow the steps below:

1. Select **Resource Config**.

1. In the **Load Balancers** column, enter the name of your PKS API load balancer. 

<p class="note"><strong>Note</strong>: The name of your PKS API load balancer is the environment name you configured in your `terraform.tfstate` file in <a href="https://docs.pivotal.io/pcf/om/2-4/azure/prepare-env-terraform.html">Step 1: Download Templates and Edit Variables File</a> appended with the suffix, <code>-pks-lb</code>, <code>YOUR-ENVIRONMENT-NAME-pks-lb</code>. 
</p>

1. (Optional) Edit other resources used by the **Pivotal Container Service** job.

    ![Resource pane configuration](images/azure-resources.png)

<p class="note"><strong>Note</strong>: If you experience timeouts or slowness when interacting with the PKS API,
select a <strong>VM Type</strong> with greater CPU and memory resources for the <strong>Pivotal Container Service</strong> job.</p>

##<a id='apply-changes'></a> Step 3: Apply Changes

<%= partial 'apply-changes' %>

##<a id='retrieve-pks-api'></a> Step 4: Retrieve the PKS API Endpoint

<%= partial 'share-endpoint' %>

##<a id='next-steps'></a> Next Steps

After installing PKS on Azure, you may want to do one or more of the following:

* [Install the PKS and Kubernetes CLIs](#clis)
* [Configure PKS API Access](#api)
* [Configure Authentication for PKS](#auth)

### <a name='clis'></a> Install the PKS and Kubernetes CLIs

<%= partial 'install-cli' %>

### <a name='api'></a> Configure PKS API Access

Follow the procedures in [Configuring PKS API Access](configure-api.html).

### <a name='auth'></a> Configure Authentication for PKS

<%= partial 'configure-auth' %>

### <a name='lb-pks-api'></a> Configure an Azure Load Balancer for the PKS API

After completing the install process for PKS on Azure, you must configure your Azure load balancer for the PKS API. For more information, see [Configuring an Azure Load Balancer for the PKS API](https://docs.pivotal.io/runtimes/pks/1-3/azure-api-load-balancer.html).